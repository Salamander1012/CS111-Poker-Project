public class Poker {
	
	public final static int SPADES = 0;
	public final static int HEARTS = 1;
	public final static int DIAMONDS = 2;
	public final static int CLUBS = 3;
	public final static int JOKER = 4;
	   
	public final static int ACE = 1;      // Codes for the non-numeric cards.
	public final static int JACK = 11;    //   Cards 2 through 10 have their 
	public final static int QUEEN = 12;   //   numerical values for their codes.
	public final static int KING = 13;

	public static void main(String[] args) {
		
		
		Hand s = new Hand();
		s.addCard(new Card(3, SPADES));
		s.addCard(new Card(3, HEARTS));
		s.addCard(new Card(2, SPADES));
		s.addCard(new Card(2, SPADES));
		s.addCard(new Card(5, SPADES));
	
		Hand h = new Hand();
		h.addCard(new Card(10, SPADES));
		h.addCard(new Card(11, SPADES));
		h.addCard(new Card(12, CLUBS));
		h.addCard(new Card(13, SPADES));
		h.addCard(new Card(1, SPADES));
		
		
		//System.out.println(elimC("abc"));
		int[] a = {-1, 7, 8};
		int[] b = {2};
		int [] test = merge(a, b);
		
		for(int i = 0; i<test.length; i++) {
			System.out.print(test[i] + " ");
		}
		
	}
	
	public static  void mergeSort(int[] l) {
		
		
	}
	
	public static int[] merge(int[] a, int[] b) {
		int aPointer = 0;
		int bPointer = 0;
		int cPointer = 0;
		int[] c = new int[a.length + b.length];
		while(true) {
			if(aPointer == a.length) {
				for(int i = bPointer; i<b.length; i++) {
					c[cPointer]=b[i];
					cPointer++;
				}
				break;
			}
			
			if(bPointer == b.length) {
				for(int i = aPointer; i<a.length; i++) {
					c[cPointer]=a[i];
					cPointer++;
				}
				break;
			}
			
			if(a[aPointer]<=b[bPointer]) {
				c[cPointer] = a[aPointer];
				aPointer++;
			} else {
				c[cPointer] = b[bPointer];
				bPointer++;
			}
			cPointer++;
		}
		return c;
	}
}